import{v as e,x as p,J as n,bc as l,n as d,a6 as u,Q as h}from"./main-DjP14LTj.js";import{c}from"./GraphicsCollection-CYIkAW8g.js";import{r as y}from"./BitmapContainer-BdSrypbX.js";import{S as f}from"./LayerView2D-WYkzCiM3.js";import{A as _}from"./GraphicsView2D-BN3Rgugr.js";import{h as x}from"./HighlightGraphicContainer-Bx2iHZKw.js";import{_ as H}from"./ExportStrategy-CH9rWAU8.js";import{u as w}from"./MapView--Nl-eCPK.js";import{y as v}from"./LayerView-aYWsq2e-.js";import{y as I}from"./ExportImageParameters-BByiGm2d.js";import{i as $}from"./timeSupport-D5s79DFN.js";import{i as V}from"./RefreshableLayerView-Bj0VRg6J.js";import{S as E}from"./MapServiceLayerViewHelper-CEIawBJB.js";import{r as G}from"./drapedUtils-DSTIzNkY.js";import{c as P}from"./HighlightDefaults-CxgSwQGt.js";import"./preload-helper-ExcqyqRp.js";import"./WGLContainer-A61oke9M.js";import"./dataViewUtils-DH9ClSQ7.js";import"./enums-Dk3osxpS.js";import"./getDataTypeBytes-DflDeYgv.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-CnpCxTZE.js";import"./vec2f32-BbH2jxlN.js";import"./ProgramTemplate-BdwThcP_.js";import"./Texture-BM6sXR4E.js";import"./signal-E7ULl-sq.js";import"./VertexArrayObject-Bgd1Pztm.js";import"./memoryEstimations-DOOUGMEM.js";import"./mat2df32-orApM5a3.js";import"./mat2d-D9DBP-jx.js";import"./common-DQOJ18NT.js";import"./mat3-CruJiiUv.js";import"./vec32-BN87Rubm.js";import"./vec3f32-nZdmKIgz.js";import"./definitions-CPtb4TQS.js";import"./Container-DbFkeMPR.js";import"./EffectView-D7XgQ-JU.js";import"./parser-DQaaf5nP.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-CYMzV1bI.js";import"./Tile-DkzvRIEQ.js";import"./vec2-maR1OrZI.js";import"./Queue-CTkgIBT9.js";import"./ReactiveMap-CtqeQZG9.js";import"./quickselect-QQC62dOK.js";import"./Query-C0lUaiT5.js";import"./Field-CLELRhkO.js";import"./fieldType-DcHZ-nAg.js";import"./TimeExtent-DG5VDgCK.js";import"./config-DoMhnbNN.js";import"./enums-BJSSbDkD.js";import"./earcut-Lltz9D9k.js";import"./vec2f64-DohEyf3f.js";import"./featureConversionUtils-BKQQaZRX.js";import"./OptimizedFeatureSet-BlsaYbZr.js";import"./OptimizedGeometry-HCQpwVRO.js";import"./BitmapTechnique-DoI7ROcN.js";import"./GraphShaderModule-D2hKVgdL.js";import"./FramebufferObject-DkEUhtof.js";import"./ShaderBuilder-2TyNtp3p.js";import"./BindType-BBwFZqyN.js";import"./TechniqueType-uMFRS8dR.js";import"./utils-BQBvadb7.js";import"./layerViewUtils-AlyT__hU.js";import"./FieldsIndex-CpET8W1v.js";import"./timeZoneUtils-ctmV1c_V.js";import"./CIMSymbolHelper-C9ese8Iz.js";import"./BidiEngine-DNnuvc1i.js";import"./fontUtils-CgZixVz5.js";import"./Rect-DD2mtLLs.js";import"./utils-BRg6PM3S.js";import"./defaultCIMValues-DII_GG3u.js";import"./rasterizingUtils-DXhhOiXw.js";import"./floatRGBA-BSip6sPi.js";import"./OverrideHelper-CZdwjfVi.js";import"./colorUtils-C7x9dn3F.js";import"./vec42-CKs01hkn.js";import"./vec4f64-o2zAXfmz.js";import"./callExpressionWithFeature-Lj0xxE8c.js";import"./quantizationUtils-DOwqR1_b.js";import"./FeatureMetadata-SMt_ugnR.js";import"./diffUtils-Bd0PNRw4.js";import"./UpdateTracking2D-EW6-w8Td.js";import"./UpdatingHandles-BodeAlAT.js";import"./queryUtils-CP32egz3.js";import"./projection-Cr2UdRO8.js";import"./normalizeUtils-SRT161tL.js";import"./utils-BKTVHCGw.js";import"./utils-Ccw9jb0b.js";import"./json-Wa8cmqdu.js";import"./timeSupport-Dk6VDs99.js";import"./TimeOnly-Cxd80khr.js";import"./intl-CiVyaTj9.js";import"./labelUtils-CNE30VQD.js";import"./FeatureCommandQueue-D6r0OXEU.js";import"./lengthUtils-C36O5hiv.js";import"./QueueProcessor-pgzIEK3Q.js";import"./mat3f64-q3fE-ZOt.js";import"./normalizeUtilsSync-B-WKnFfT.js";import"./dehydratedFeatures-DTO3T6U_.js";import"./AGraphicContainer-BMIycwV9.js";import"./TechniqueInstance-CF0wLHTX.js";import"./TileContainer-Bfo4QUaT.js";import"./TileInfo-B8aDsP7P.js";import"./TileKey-DZd6gJy7.js";import"./globalCss-KnW5pPMg.js";import"./Version-Bc_iivf3.js";import"./CollectionFlattener-BoZRfLNg.js";import"./workers-rE-J65v2.js";import"./jsxFactory-C0AHuf08.js";import"./uuid-Cl5lrJ4c.js";import"./Map-CKBRKWX3.js";import"./Basemap-D5HcZ4EQ.js";import"./loadAll-D3oVU9m6.js";import"./PortalItem-DkCTixjQ.js";import"./Layer-DEtQUjNH.js";import"./HeightModelInfo-BHsqBHLV.js";import"./IViewEvents-Bci6PjlS.js";import"./a11yUtils-95LJHT7j.js";import"./heightModelInfoUtils-BOqg3oQa.js";import"./ViewingMode-HRfKv6NR.js";import"./Scheduler-Czqz1JkH.js";import"./unitBezier-B1N-tmtC.js";import"./imageUtils-D0_hAkel.js";import"./themeUtils-C3zvZbsE.js";import"./ColorBackground-HCy9FHra.js";import"./scaleUtils-BZbO3nef.js";import"./floorFilterUtils-DKzVzLpH.js";import"./sublayerUtils-HU4UXtyF.js";import"./popupUtils-C1MRAulz.js";const U=t=>{let i=class extends t{initialize(){this.exportImageParameters=new I({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get floors(){return this.view?.floors??null}get exportImageVersion(){return this.exportImageParameters?.commitProperty("version"),this.commitProperty("timeExtent"),this.commitProperty("floors"),(this._get("exportImageVersion")||0)+1}get timeExtent(){return $(this.layer,this.view?.timeExtent,this._get("timeExtent"))}canResume(){return!!super.canResume()&&!this.timeExtent?.isEmpty}};return e([p()],i.prototype,"exportImageParameters",void 0),e([p({readOnly:!0})],i.prototype,"floors",null),e([p({readOnly:!0})],i.prototype,"exportImageVersion",null),e([p()],i.prototype,"layer",void 0),e([p()],i.prototype,"suspended",void 0),e([p({readOnly:!0})],i.prototype,"timeExtent",null),i=e([n("esri.views.layers.MapImageLayerView")],i),i};let m=class extends U(V(f(v))){constructor(){super(...arguments),this._highlightGraphics=new c,this._updateHash=""}fetchPopupFeaturesAtLocation(t,i){return this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t,i)}update(t){const i=`${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;this._updateHash!==i&&(this._updateHash=i,this.strategy.update(t).catch(r=>{l(r)||d.getLogger(this).error(r)}),t.stationary&&this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)),this._highlightView.processUpdate(t)}attach(){const{imageMaxWidth:t,imageMaxHeight:i,version:r}=this.layer,o=r>=10.3,g=r>=10;this._bitmapContainer=new y,this.container.addChild(this._bitmapContainer),this._highlightView=new _({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new x(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1}),this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new E({createFetchPopupFeaturesQueryGeometry:(s,a)=>G(s,a,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(s,a)=>{this._highlightView.graphicUpdateHandler({graphic:s,property:a})},layerView:this,updatingHandles:this._updatingHandles}),this.strategy=new H({container:this._bitmapContainer,fetchSource:this.fetchImageBitmap.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:t,imageMaxHeight:i,imageRotationSupported:o,imageNormalizationSupported:g,hidpi:!0}),this.addAttachHandles(u(()=>this.exportImageVersion,()=>this.requestUpdate())),this.requestUpdate()}detach(){this.strategy.destroy(),this.container.removeAllChildren(),this._bitmapContainer.removeAllChildren(),this._highlightView.destroy(),this._popupHighlightHelper.destroy()}viewChange(){}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}async doRefresh(){this._updateHash="",this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,i,r,o){return this.layer.fetchImage(t,i,r,{timeExtent:this.timeExtent,floors:this.floors,...o})}fetchImageBitmap(t,i,r,o){return this.layer.fetchImageBitmap(t,i,r,{timeExtent:this.timeExtent,floors:this.floors,...o})}highlight(t,i){const r=w(t);if(r.length===0)return h();const o=i?.name??P;return this._addHighlightGraphics(r,o),h(()=>!this.destroyed&&this._removeHighlightGraphics(r,o))}_processHighlight(){const t=this._getHighlights();this._highlightView?.setHighlight(t)}_addHighlightGraphics(t,i){this._highlightGraphics.addMany(t),this._addHighlights(t.map(r=>r.uid),i)}_removeHighlightGraphics(t,i){this._highlightGraphics.removeMany(t),this._removeHighlights(t.map(r=>r.uid),i)}};e([p()],m.prototype,"strategy",void 0),e([p()],m.prototype,"updating",void 0),m=e([n("esri.views.2d.layers.MapImageLayerView2D")],m);const Yi=m;export{Yi as default};
