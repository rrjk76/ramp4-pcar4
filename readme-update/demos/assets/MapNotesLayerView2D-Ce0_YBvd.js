import{aj as u,V as f,bR as w,Q as n,a6 as p,dt as h,a8 as y,v as _,J as V}from"./main-DjP14LTj.js";import{S as v}from"./LayerView2D-WYkzCiM3.js";import{t as g}from"./GraphicContainer-Bbx38iyF.js";import{A as c}from"./GraphicsView2D-BN3Rgugr.js";import{y as C}from"./LayerView-aYWsq2e-.js";import"./preload-helper-ExcqyqRp.js";import"./utils-BQBvadb7.js";import"./Container-DbFkeMPR.js";import"./MapView--Nl-eCPK.js";import"./globalCss-KnW5pPMg.js";import"./Queue-CTkgIBT9.js";import"./signal-E7ULl-sq.js";import"./Version-Bc_iivf3.js";import"./CollectionFlattener-BoZRfLNg.js";import"./workers-rE-J65v2.js";import"./intl-CiVyaTj9.js";import"./projection-Cr2UdRO8.js";import"./TileInfo-B8aDsP7P.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-C0AHuf08.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-BodeAlAT.js";import"./Map-CKBRKWX3.js";import"./Basemap-D5HcZ4EQ.js";import"./loadAll-D3oVU9m6.js";import"./PortalItem-DkCTixjQ.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-CYMzV1bI.js";import"./common-DQOJ18NT.js";import"./Layer-DEtQUjNH.js";import"./TimeExtent-DG5VDgCK.js";import"./GraphicsCollection-CYIkAW8g.js";import"./HeightModelInfo-BHsqBHLV.js";import"./timeZoneUtils-ctmV1c_V.js";import"./ReactiveMap-CtqeQZG9.js";import"./Query-C0lUaiT5.js";import"./Field-CLELRhkO.js";import"./fieldType-DcHZ-nAg.js";import"./IViewEvents-Bci6PjlS.js";import"./HighlightDefaults-CxgSwQGt.js";import"./a11yUtils-95LJHT7j.js";import"./heightModelInfoUtils-BOqg3oQa.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2-maR1OrZI.js";import"./vec2f64-DohEyf3f.js";import"./mat2d-D9DBP-jx.js";import"./normalizeUtils-SRT161tL.js";import"./utils-BKTVHCGw.js";import"./utils-Ccw9jb0b.js";import"./mat2df32-orApM5a3.js";import"./mat3-CruJiiUv.js";import"./vec2f32-BbH2jxlN.js";import"./Scheduler-Czqz1JkH.js";import"./vec32-BN87Rubm.js";import"./unitBezier-B1N-tmtC.js";import"./Tile-DkzvRIEQ.js";import"./quickselect-QQC62dOK.js";import"./definitions-CPtb4TQS.js";import"./enums-Dk3osxpS.js";import"./Texture-BM6sXR4E.js";import"./getDataTypeBytes-DflDeYgv.js";import"./imageUtils-D0_hAkel.js";import"./themeUtils-C3zvZbsE.js";import"./ColorBackground-HCy9FHra.js";import"./EffectView-D7XgQ-JU.js";import"./parser-DQaaf5nP.js";import"./layerViewUtils-AlyT__hU.js";import"./AGraphicContainer-BMIycwV9.js";import"./TechniqueInstance-CF0wLHTX.js";import"./UpdateTracking2D-EW6-w8Td.js";import"./dataViewUtils-DH9ClSQ7.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-CnpCxTZE.js";import"./FramebufferObject-DkEUhtof.js";import"./VertexArrayObject-Bgd1Pztm.js";import"./memoryEstimations-DOOUGMEM.js";import"./TileContainer-Bfo4QUaT.js";import"./WGLContainer-A61oke9M.js";import"./ProgramTemplate-BdwThcP_.js";import"./vec3f32-nZdmKIgz.js";import"./config-DoMhnbNN.js";import"./enums-BJSSbDkD.js";import"./earcut-Lltz9D9k.js";import"./featureConversionUtils-BKQQaZRX.js";import"./OptimizedFeatureSet-BlsaYbZr.js";import"./OptimizedGeometry-HCQpwVRO.js";import"./FeatureCommandQueue-D6r0OXEU.js";import"./CIMSymbolHelper-C9ese8Iz.js";import"./BidiEngine-DNnuvc1i.js";import"./fontUtils-CgZixVz5.js";import"./Rect-DD2mtLLs.js";import"./utils-BRg6PM3S.js";import"./defaultCIMValues-DII_GG3u.js";import"./rasterizingUtils-DXhhOiXw.js";import"./floatRGBA-BSip6sPi.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-D2hKVgdL.js";import"./ShaderBuilder-2TyNtp3p.js";import"./BindType-BBwFZqyN.js";import"./lengthUtils-C36O5hiv.js";import"./QueueProcessor-pgzIEK3Q.js";import"./FieldsIndex-CpET8W1v.js";import"./OverrideHelper-CZdwjfVi.js";import"./colorUtils-C7x9dn3F.js";import"./vec42-CKs01hkn.js";import"./vec4f64-o2zAXfmz.js";import"./callExpressionWithFeature-Lj0xxE8c.js";import"./quantizationUtils-DOwqR1_b.js";import"./FeatureMetadata-SMt_ugnR.js";import"./diffUtils-Bd0PNRw4.js";import"./queryUtils-CP32egz3.js";import"./json-Wa8cmqdu.js";import"./timeSupport-Dk6VDs99.js";import"./TimeOnly-Cxd80khr.js";import"./labelUtils-CNE30VQD.js";import"./mat3f64-q3fE-ZOt.js";import"./normalizeUtilsSync-B-WKnFfT.js";import"./dehydratedFeatures-DTO3T6U_.js";const d="sublayers",m="layerView",b=new Set(["default"]);let l=class extends v(C){constructor(){super(...arguments),this._highlightIds=new Map}*graphicsViews(){this._graphicsViewsFeatureCollectionMap==null?this._graphicsViews==null?yield*[]:yield*this._graphicsViews:yield*this._graphicsViewsFeatureCollectionMap.keys()}async hitTest(i,r){return Array.from(this.graphicsViews(),t=>{const e=t.hitTest(i);if(this._graphicsViewsFeatureCollectionMap!=null){const o=this._graphicsViewsFeatureCollectionMap.get(t);for(const s of e)!s.popupTemplate&&o.popupTemplate&&(s.popupTemplate=o.popupTemplate),s.sourceLayer=s.layer=this.layer}return e}).flat().map(t=>({type:"graphic",graphic:t,layer:this.layer,mapPoint:i}))}highlight(i,r="default"){let t;typeof i=="number"?t=[i]:i instanceof u?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(o=>o&&o.uid):f.isCollection(i)&&(t=i.map(o=>o&&o.uid).toArray());const e=t?.filter(w);return e?.length?(this._addHighlight(e),n(()=>this._removeHighlight(e))):n()}update(i){for(const r of this.graphicsViews())r.processUpdate(i)}attach(){const i=this.view,r=()=>this.requestUpdate(),t=this.layer.featureCollections;if(t!=null&&t.length){this._graphicsViewsFeatureCollectionMap=new Map;for(const e of t){const o=new g(this.view.featuresTilingScheme),s=new c({view:i,graphics:e.source,renderer:e.renderer,requestUpdateCallback:r,container:o});this._graphicsViewsFeatureCollectionMap.set(s,e),this.container.addChild(s.container),this.addHandles([p(()=>e.visible,a=>s.container.visible=a,h),p(()=>s.updating,()=>this.notifyChange("updating"),h)],m)}this._updateHighlight()}else this.layer.sublayers!=null&&this.addHandles(y(()=>this.layer.sublayers,"change",()=>this._createGraphicsViews(),{onListenerAdd:()=>this._createGraphicsViews(),onListenerRemove:()=>this._destroyGraphicsViews()}),d)}detach(){this._destroyGraphicsViews(),this.removeHandles(d)}moveEnd(){}viewChange(){for(const i of this.graphicsViews())i.viewChange()}isUpdating(){for(const i of this.graphicsViews())if(i.updating)return!0;return!1}_destroyGraphicsViews(){this.container.removeAllChildren(),this.removeHandles(m);for(const i of this.graphicsViews())i.destroy();this._graphicsViews=null,this._graphicsViewsFeatureCollectionMap=null}_createGraphicsViews(){if(this._destroyGraphicsViews(),this.layer.sublayers==null)return;const i=[],r=this.view,t=()=>this.requestUpdate();for(const e of this.layer.sublayers){const o=new g(this.view.featuresTilingScheme);o.fadeTransitionEnabled=!0;const s=new c({view:r,graphics:e.graphics,requestUpdateCallback:t,container:o});this.addHandles([e.on("graphic-update",s.graphicUpdateHandler),p(()=>e.visible,a=>s.container.visible=a,h),p(()=>s.updating,()=>this.notifyChange("updating"),h)],m),this.container.addChild(s.container),i.push(s)}this._graphicsViews=i,this._updateHighlight()}_addHighlight(i){for(const r of i)if(this._highlightIds.has(r)){const t=this._highlightIds.get(r);this._highlightIds.set(r,t+1)}else this._highlightIds.set(r,1);this._updateHighlight()}_removeHighlight(i){for(const r of i)if(this._highlightIds.has(r)){const t=this._highlightIds.get(r)-1;t===0?this._highlightIds.delete(r):this._highlightIds.set(r,t)}this._updateHighlight()}_updateHighlight(){const i=Array.from(this._highlightIds.keys()),r=this._getHighlightBits(b.values());for(const t of this.graphicsViews())t.setHighlight(i.map(e=>({objectId:e,highlightFlags:r})))}};l=_([V("esri.views.2d.layers.MapNotesLayerView2D")],l);const qt=l;export{qt as default};
