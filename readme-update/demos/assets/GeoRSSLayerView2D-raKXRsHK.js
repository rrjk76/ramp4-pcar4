import{a6 as l,dt as h,V as g,du as f,v as w,J as d}from"./main-DjP14LTj.js";import{p as n}from"./SimpleRenderer-DuyaAw3l.js";import{fromJSON as u}from"./jsonUtils-B07P71JX.js";import{d as S}from"./FeatureSet-DwtBbRxS.js";import{S as V}from"./LayerView2D-WYkzCiM3.js";import{t as b}from"./GraphicContainer-Bbx38iyF.js";import{A as _}from"./GraphicsView2D-BN3Rgugr.js";import{y as T}from"./LayerView-aYWsq2e-.js";import"./preload-helper-ExcqyqRp.js";import"./commonProperties-lwduaWPw.js";import"./colorRamps-7niflw5Q.js";import"./ColorStop-yZath20C.js";import"./visualVariableUtils-CU8xxoGv.js";import"./lengthUtils-C36O5hiv.js";import"./typeUtils-DMk3aawg.js";import"./ClassBreaksRenderer-2_S3fZqZ.js";import"./RendererLegendOptions-BULeCc-J.js";import"./LRUCache-_N5YHjj2.js";import"./MemCache-nBENzHdv.js";import"./Version-Bc_iivf3.js";import"./FieldsIndex-CpET8W1v.js";import"./timeZoneUtils-ctmV1c_V.js";import"./utils-BRg6PM3S.js";import"./defaultCIMValues-DII_GG3u.js";import"./enums-BJSSbDkD.js";import"./heatmapUtils-C8qQVis_.js";import"./vec42-CKs01hkn.js";import"./common-DQOJ18NT.js";import"./vec4f64-o2zAXfmz.js";import"./UniqueValueRenderer-BaDVTX47.js";import"./diffUtils-Bd0PNRw4.js";import"./styleUtils-B7aeJEnM.js";import"./Field-CLELRhkO.js";import"./fieldType-DcHZ-nAg.js";import"./utils-BQBvadb7.js";import"./Container-DbFkeMPR.js";import"./MapView--Nl-eCPK.js";import"./globalCss-KnW5pPMg.js";import"./Queue-CTkgIBT9.js";import"./signal-E7ULl-sq.js";import"./CollectionFlattener-BoZRfLNg.js";import"./workers-rE-J65v2.js";import"./intl-CiVyaTj9.js";import"./projection-Cr2UdRO8.js";import"./TileInfo-B8aDsP7P.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-C0AHuf08.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-BodeAlAT.js";import"./Map-CKBRKWX3.js";import"./Basemap-D5HcZ4EQ.js";import"./loadAll-D3oVU9m6.js";import"./PortalItem-DkCTixjQ.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-CYMzV1bI.js";import"./Layer-DEtQUjNH.js";import"./TimeExtent-DG5VDgCK.js";import"./GraphicsCollection-CYIkAW8g.js";import"./HeightModelInfo-BHsqBHLV.js";import"./ReactiveMap-CtqeQZG9.js";import"./Query-C0lUaiT5.js";import"./IViewEvents-Bci6PjlS.js";import"./HighlightDefaults-CxgSwQGt.js";import"./a11yUtils-95LJHT7j.js";import"./heightModelInfoUtils-BOqg3oQa.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2-maR1OrZI.js";import"./vec2f64-DohEyf3f.js";import"./mat2d-D9DBP-jx.js";import"./normalizeUtils-SRT161tL.js";import"./utils-BKTVHCGw.js";import"./utils-Ccw9jb0b.js";import"./mat2df32-orApM5a3.js";import"./mat3-CruJiiUv.js";import"./vec2f32-BbH2jxlN.js";import"./Scheduler-Czqz1JkH.js";import"./vec32-BN87Rubm.js";import"./unitBezier-B1N-tmtC.js";import"./Tile-DkzvRIEQ.js";import"./quickselect-QQC62dOK.js";import"./definitions-CPtb4TQS.js";import"./enums-Dk3osxpS.js";import"./Texture-BM6sXR4E.js";import"./getDataTypeBytes-DflDeYgv.js";import"./imageUtils-D0_hAkel.js";import"./themeUtils-C3zvZbsE.js";import"./ColorBackground-HCy9FHra.js";import"./EffectView-D7XgQ-JU.js";import"./parser-DQaaf5nP.js";import"./layerViewUtils-AlyT__hU.js";import"./AGraphicContainer-BMIycwV9.js";import"./TechniqueInstance-CF0wLHTX.js";import"./UpdateTracking2D-EW6-w8Td.js";import"./dataViewUtils-DH9ClSQ7.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-CnpCxTZE.js";import"./FramebufferObject-DkEUhtof.js";import"./VertexArrayObject-Bgd1Pztm.js";import"./memoryEstimations-DOOUGMEM.js";import"./TileContainer-Bfo4QUaT.js";import"./WGLContainer-A61oke9M.js";import"./ProgramTemplate-BdwThcP_.js";import"./vec3f32-nZdmKIgz.js";import"./config-DoMhnbNN.js";import"./earcut-Lltz9D9k.js";import"./featureConversionUtils-BKQQaZRX.js";import"./OptimizedFeatureSet-BlsaYbZr.js";import"./OptimizedGeometry-HCQpwVRO.js";import"./FeatureCommandQueue-D6r0OXEU.js";import"./CIMSymbolHelper-C9ese8Iz.js";import"./BidiEngine-DNnuvc1i.js";import"./fontUtils-CgZixVz5.js";import"./Rect-DD2mtLLs.js";import"./rasterizingUtils-DXhhOiXw.js";import"./floatRGBA-BSip6sPi.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-D2hKVgdL.js";import"./ShaderBuilder-2TyNtp3p.js";import"./BindType-BBwFZqyN.js";import"./QueueProcessor-pgzIEK3Q.js";import"./OverrideHelper-CZdwjfVi.js";import"./colorUtils-C7x9dn3F.js";import"./callExpressionWithFeature-Lj0xxE8c.js";import"./quantizationUtils-DOwqR1_b.js";import"./FeatureMetadata-SMt_ugnR.js";import"./queryUtils-CP32egz3.js";import"./json-Wa8cmqdu.js";import"./timeSupport-Dk6VDs99.js";import"./TimeOnly-Cxd80khr.js";import"./labelUtils-CNE30VQD.js";import"./mat3f64-q3fE-ZOt.js";import"./normalizeUtilsSync-B-WKnFfT.js";import"./dehydratedFeatures-DTO3T6U_.js";let y=class extends V(T){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}async hitTest(t,o){if(!this.graphicsViews.length)return null;const p=this.layer;return this.graphicsViews.reverse().flatMap(r=>{const i=this._popupTemplates.get(r),e=r.hitTest(t);for(const m of e)m.layer=p,m.sourceLayer=p,m.popupTemplate=i;return e}).map(r=>({type:"graphic",graphic:r,layer:p,mapPoint:t}))}update(t){if(this.graphicsViews)for(const o of this.graphicsViews)o.processUpdate(t)}attach(){this.addAttachHandles([l(()=>this.layer?.featureCollections,t=>{this._clear();for(const{popupInfo:o,featureSet:p,layerDefinition:r}of t){const i=S.fromJSON(p),e=new g(i.features),m=r.drawingInfo,c=o?f.fromJSON(o):null,s=u(m.renderer),a=new _({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:e,renderer:s,container:new b(this.view.featuresTilingScheme)});this._graphicsViewMap[i.geometryType]=a,this._popupTemplates.set(a,c),i.geometryType!=="polygon"||this.layer.polygonSymbol?i.geometryType!=="polyline"||this.layer.lineSymbol?i.geometryType!=="point"||this.layer.pointSymbol||(this.layer.pointSymbol=s.symbol):this.layer.lineSymbol=s.symbol:this.layer.polygonSymbol=s.symbol,this.graphicsViews.push(a),this.container.addChild(a.container)}},h),l(()=>this.layer?.polygonSymbol,t=>{this._graphicsViewMap.polygon.renderer=new n({symbol:t})},h),l(()=>this.layer?.lineSymbol,t=>{this._graphicsViewMap.polyline.renderer=new n({symbol:t})},h),l(()=>this.layer?.pointSymbol,t=>{this._graphicsViewMap.point.renderer=new n({symbol:t})},h)])}detach(){this._clear()}moveEnd(){}viewChange(){for(const t of this.graphicsViews)t.viewChange()}_clear(){this.container.removeAllChildren();for(const t of this.graphicsViews)t.destroy();this._graphicsViewMap={},this._popupTemplates.clear(),this.graphicsViews.length=0}};y=w([d("esri.views.2d.layers.GeoRSSLayerView2D")],y);const Qi=y;export{Qi as default};
