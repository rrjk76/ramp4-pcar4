import{aj as u,V as f,bR as w,Q as n,a6 as p,dt as h,a8 as y,v as _,J as V}from"./main-B-FL_ckZ.js";import{S as v}from"./LayerView2D-Crm9nz4r.js";import{t as g}from"./GraphicContainer-CIb_cB6M.js";import{A as c}from"./GraphicsView2D-DSAedXbk.js";import{y as C}from"./LayerView-pj3kHc2h.js";import"./preload-helper-ExcqyqRp.js";import"./utils-BQBvadb7.js";import"./Container-9MARsxxO.js";import"./MapView-CEOjERsJ.js";import"./globalCss-D7oT60T7.js";import"./Queue-CkVp1vLB.js";import"./signal-Dv2tZxvA.js";import"./Version-BT2xhOES.js";import"./CollectionFlattener--OcexcUe.js";import"./workers-CHNlc7ty.js";import"./intl-C0xT4ZSX.js";import"./projection-DdQ02quy.js";import"./TileInfo-DCbSL6rJ.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-DUdwxInR.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-CBS01PrZ.js";import"./Map-BhBLn_7C.js";import"./Basemap-B92y8OzZ.js";import"./loadAll-CvgtY0-t.js";import"./PortalItem-JP_bxXJR.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-sSuybu4P.js";import"./common-DQOJ18NT.js";import"./Layer-DZzkWlRr.js";import"./TimeExtent-l1zy2JWC.js";import"./GraphicsCollection-DLMY4wgz.js";import"./HeightModelInfo-3v7ob1Pg.js";import"./timeZoneUtils-CT_Wpkl8.js";import"./ReactiveMap-Bre5wqxy.js";import"./Query-qd1JB6Zm.js";import"./Field-CQ_NhE7H.js";import"./fieldType-BcIp_PuB.js";import"./IViewEvents-Bci6PjlS.js";import"./HighlightDefaults-B0Uw5LC7.js";import"./a11yUtils-CYhfaqvc.js";import"./heightModelInfoUtils-D9cUsSr8.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2-maR1OrZI.js";import"./vec2f64-DohEyf3f.js";import"./mat2d-D9DBP-jx.js";import"./normalizeUtils-B-IjnsJU.js";import"./utils-CUWkDQzB.js";import"./utils-DVuDy6nH.js";import"./mat2df32-orApM5a3.js";import"./mat3-CruJiiUv.js";import"./vec2f32-BbH2jxlN.js";import"./Scheduler-Cj5jKZyp.js";import"./vec32-Cb0gihbp.js";import"./unitBezier-B1N-tmtC.js";import"./Tile-Dzk2aJv4.js";import"./quickselect-QQC62dOK.js";import"./definitions-CPtb4TQS.js";import"./enums-Dk3osxpS.js";import"./Texture-DLE6kXwt.js";import"./getDataTypeBytes-DflDeYgv.js";import"./imageUtils-CUUOBjkJ.js";import"./themeUtils-C3zvZbsE.js";import"./ColorBackground-y9s9usuP.js";import"./EffectView-Bsmal_dO.js";import"./parser-BMuIF5lg.js";import"./layerViewUtils-BADtz7no.js";import"./AGraphicContainer-qYIS9EzT.js";import"./TechniqueInstance-d6IA5ENy.js";import"./UpdateTracking2D-XpOSMI_c.js";import"./dataViewUtils-CxkOv3qb.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-CnpCxTZE.js";import"./FramebufferObject-DS9Dd2AM.js";import"./VertexArrayObject-9NEgXLPS.js";import"./memoryEstimations-BZfeOxWu.js";import"./TileContainer-Bph8I62G.js";import"./WGLContainer-XVW1xN-Y.js";import"./ProgramTemplate-dVU0Y3fK.js";import"./vec3f32-nZdmKIgz.js";import"./config-DoMhnbNN.js";import"./enums-BJSSbDkD.js";import"./earcut-Lltz9D9k.js";import"./featureConversionUtils-YJ5vXjvg.js";import"./OptimizedFeatureSet-gQeVdhWZ.js";import"./OptimizedGeometry-Cb-2qoqd.js";import"./FeatureCommandQueue-cyS_bCmC.js";import"./CIMSymbolHelper-BqfwbwOt.js";import"./BidiEngine-DNnuvc1i.js";import"./fontUtils-BAwwWn2S.js";import"./Rect-BAVAn1kR.js";import"./utils-BRg6PM3S.js";import"./defaultCIMValues-DII_GG3u.js";import"./rasterizingUtils-CQEMzoLF.js";import"./floatRGBA-BbqPr5zi.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-Dlgau0Yj.js";import"./ShaderBuilder-Cw0BKF7S.js";import"./BindType-BBwFZqyN.js";import"./lengthUtils-YoW5E_3l.js";import"./QueueProcessor-CVSvvvvR.js";import"./FieldsIndex-CHWYfr-f.js";import"./OverrideHelper-zsEovizU.js";import"./colorUtils-DdrzixZy.js";import"./vec42-CKs01hkn.js";import"./vec4f64-o2zAXfmz.js";import"./callExpressionWithFeature-C7xY3YDs.js";import"./quantizationUtils-CyxI-93w.js";import"./FeatureMetadata-CR0aIHAm.js";import"./diffUtils-CmlziI2u.js";import"./queryUtils-ChfU6vLU.js";import"./json-Wa8cmqdu.js";import"./timeSupport-5LIXXZIy.js";import"./TimeOnly-Dv2_2idQ.js";import"./labelUtils-umoOFWd6.js";import"./mat3f64-q3fE-ZOt.js";import"./normalizeUtilsSync-CDIV-Jl9.js";import"./dehydratedFeatures-AhQrQOfs.js";const d="sublayers",m="layerView",b=new Set(["default"]);let l=class extends v(C){constructor(){super(...arguments),this._highlightIds=new Map}*graphicsViews(){this._graphicsViewsFeatureCollectionMap==null?this._graphicsViews==null?yield*[]:yield*this._graphicsViews:yield*this._graphicsViewsFeatureCollectionMap.keys()}async hitTest(i,r){return Array.from(this.graphicsViews(),t=>{const e=t.hitTest(i);if(this._graphicsViewsFeatureCollectionMap!=null){const o=this._graphicsViewsFeatureCollectionMap.get(t);for(const s of e)!s.popupTemplate&&o.popupTemplate&&(s.popupTemplate=o.popupTemplate),s.sourceLayer=s.layer=this.layer}return e}).flat().map(t=>({type:"graphic",graphic:t,layer:this.layer,mapPoint:i}))}highlight(i,r="default"){let t;typeof i=="number"?t=[i]:i instanceof u?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(o=>o&&o.uid):f.isCollection(i)&&(t=i.map(o=>o&&o.uid).toArray());const e=t?.filter(w);return e?.length?(this._addHighlight(e),n(()=>this._removeHighlight(e))):n()}update(i){for(const r of this.graphicsViews())r.processUpdate(i)}attach(){const i=this.view,r=()=>this.requestUpdate(),t=this.layer.featureCollections;if(t!=null&&t.length){this._graphicsViewsFeatureCollectionMap=new Map;for(const e of t){const o=new g(this.view.featuresTilingScheme),s=new c({view:i,graphics:e.source,renderer:e.renderer,requestUpdateCallback:r,container:o});this._graphicsViewsFeatureCollectionMap.set(s,e),this.container.addChild(s.container),this.addHandles([p(()=>e.visible,a=>s.container.visible=a,h),p(()=>s.updating,()=>this.notifyChange("updating"),h)],m)}this._updateHighlight()}else this.layer.sublayers!=null&&this.addHandles(y(()=>this.layer.sublayers,"change",()=>this._createGraphicsViews(),{onListenerAdd:()=>this._createGraphicsViews(),onListenerRemove:()=>this._destroyGraphicsViews()}),d)}detach(){this._destroyGraphicsViews(),this.removeHandles(d)}moveEnd(){}viewChange(){for(const i of this.graphicsViews())i.viewChange()}isUpdating(){for(const i of this.graphicsViews())if(i.updating)return!0;return!1}_destroyGraphicsViews(){this.container.removeAllChildren(),this.removeHandles(m);for(const i of this.graphicsViews())i.destroy();this._graphicsViews=null,this._graphicsViewsFeatureCollectionMap=null}_createGraphicsViews(){if(this._destroyGraphicsViews(),this.layer.sublayers==null)return;const i=[],r=this.view,t=()=>this.requestUpdate();for(const e of this.layer.sublayers){const o=new g(this.view.featuresTilingScheme);o.fadeTransitionEnabled=!0;const s=new c({view:r,graphics:e.graphics,requestUpdateCallback:t,container:o});this.addHandles([e.on("graphic-update",s.graphicUpdateHandler),p(()=>e.visible,a=>s.container.visible=a,h),p(()=>s.updating,()=>this.notifyChange("updating"),h)],m),this.container.addChild(s.container),i.push(s)}this._graphicsViews=i,this._updateHighlight()}_addHighlight(i){for(const r of i)if(this._highlightIds.has(r)){const t=this._highlightIds.get(r);this._highlightIds.set(r,t+1)}else this._highlightIds.set(r,1);this._updateHighlight()}_removeHighlight(i){for(const r of i)if(this._highlightIds.has(r)){const t=this._highlightIds.get(r)-1;t===0?this._highlightIds.delete(r):this._highlightIds.set(r,t)}this._updateHighlight()}_updateHighlight(){const i=Array.from(this._highlightIds.keys()),r=this._getHighlightBits(b.values());for(const t of this.graphicsViews())t.setHighlight(i.map(e=>({objectId:e,highlightFlags:r})))}};l=_([V("esri.views.2d.layers.MapNotesLayerView2D")],l);const qt=l;export{qt as default};
