import{a6 as l,dt as h,V as g,du as f,v as w,J as d}from"./main-B-FL_ckZ.js";import{p as n}from"./SimpleRenderer-D804zarl.js";import{fromJSON as u}from"./jsonUtils-mUftmo-I.js";import{d as S}from"./FeatureSet-IqvFh2lD.js";import{S as V}from"./LayerView2D-Crm9nz4r.js";import{t as b}from"./GraphicContainer-CIb_cB6M.js";import{A as _}from"./GraphicsView2D-DSAedXbk.js";import{y as T}from"./LayerView-pj3kHc2h.js";import"./preload-helper-ExcqyqRp.js";import"./commonProperties-BCLGg1K5.js";import"./colorRamps-CJQrnGrp.js";import"./ColorStop-FHB53n0j.js";import"./visualVariableUtils-BJRS_536.js";import"./lengthUtils-YoW5E_3l.js";import"./typeUtils-BNhMsmFJ.js";import"./ClassBreaksRenderer-Bp3rTyrO.js";import"./RendererLegendOptions-DDJp47Yq.js";import"./LRUCache-CHknRjDy.js";import"./MemCache-0SuF_tYP.js";import"./Version-BT2xhOES.js";import"./FieldsIndex-CHWYfr-f.js";import"./timeZoneUtils-CT_Wpkl8.js";import"./utils-BRg6PM3S.js";import"./defaultCIMValues-DII_GG3u.js";import"./enums-BJSSbDkD.js";import"./heatmapUtils-DC7mxYRs.js";import"./vec42-CKs01hkn.js";import"./common-DQOJ18NT.js";import"./vec4f64-o2zAXfmz.js";import"./UniqueValueRenderer-LmYVmDKh.js";import"./diffUtils-CmlziI2u.js";import"./styleUtils-DV04A-x3.js";import"./Field-CQ_NhE7H.js";import"./fieldType-BcIp_PuB.js";import"./utils-BQBvadb7.js";import"./Container-9MARsxxO.js";import"./MapView-CEOjERsJ.js";import"./globalCss-D7oT60T7.js";import"./Queue-CkVp1vLB.js";import"./signal-Dv2tZxvA.js";import"./CollectionFlattener--OcexcUe.js";import"./workers-CHNlc7ty.js";import"./intl-C0xT4ZSX.js";import"./projection-DdQ02quy.js";import"./TileInfo-DCbSL6rJ.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-DUdwxInR.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-CBS01PrZ.js";import"./Map-BhBLn_7C.js";import"./Basemap-B92y8OzZ.js";import"./loadAll-CvgtY0-t.js";import"./PortalItem-JP_bxXJR.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-sSuybu4P.js";import"./Layer-DZzkWlRr.js";import"./TimeExtent-l1zy2JWC.js";import"./GraphicsCollection-DLMY4wgz.js";import"./HeightModelInfo-3v7ob1Pg.js";import"./ReactiveMap-Bre5wqxy.js";import"./Query-qd1JB6Zm.js";import"./IViewEvents-Bci6PjlS.js";import"./HighlightDefaults-B0Uw5LC7.js";import"./a11yUtils-CYhfaqvc.js";import"./heightModelInfoUtils-D9cUsSr8.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2-maR1OrZI.js";import"./vec2f64-DohEyf3f.js";import"./mat2d-D9DBP-jx.js";import"./normalizeUtils-B-IjnsJU.js";import"./utils-CUWkDQzB.js";import"./utils-DVuDy6nH.js";import"./mat2df32-orApM5a3.js";import"./mat3-CruJiiUv.js";import"./vec2f32-BbH2jxlN.js";import"./Scheduler-Cj5jKZyp.js";import"./vec32-Cb0gihbp.js";import"./unitBezier-B1N-tmtC.js";import"./Tile-Dzk2aJv4.js";import"./quickselect-QQC62dOK.js";import"./definitions-CPtb4TQS.js";import"./enums-Dk3osxpS.js";import"./Texture-DLE6kXwt.js";import"./getDataTypeBytes-DflDeYgv.js";import"./imageUtils-CUUOBjkJ.js";import"./themeUtils-C3zvZbsE.js";import"./ColorBackground-y9s9usuP.js";import"./EffectView-Bsmal_dO.js";import"./parser-BMuIF5lg.js";import"./layerViewUtils-BADtz7no.js";import"./AGraphicContainer-qYIS9EzT.js";import"./TechniqueInstance-d6IA5ENy.js";import"./UpdateTracking2D-XpOSMI_c.js";import"./dataViewUtils-CxkOv3qb.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-CnpCxTZE.js";import"./FramebufferObject-DS9Dd2AM.js";import"./VertexArrayObject-9NEgXLPS.js";import"./memoryEstimations-BZfeOxWu.js";import"./TileContainer-Bph8I62G.js";import"./WGLContainer-XVW1xN-Y.js";import"./ProgramTemplate-dVU0Y3fK.js";import"./vec3f32-nZdmKIgz.js";import"./config-DoMhnbNN.js";import"./earcut-Lltz9D9k.js";import"./featureConversionUtils-YJ5vXjvg.js";import"./OptimizedFeatureSet-gQeVdhWZ.js";import"./OptimizedGeometry-Cb-2qoqd.js";import"./FeatureCommandQueue-cyS_bCmC.js";import"./CIMSymbolHelper-BqfwbwOt.js";import"./BidiEngine-DNnuvc1i.js";import"./fontUtils-BAwwWn2S.js";import"./Rect-BAVAn1kR.js";import"./rasterizingUtils-CQEMzoLF.js";import"./floatRGBA-BbqPr5zi.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-Dlgau0Yj.js";import"./ShaderBuilder-Cw0BKF7S.js";import"./BindType-BBwFZqyN.js";import"./QueueProcessor-CVSvvvvR.js";import"./OverrideHelper-zsEovizU.js";import"./colorUtils-DdrzixZy.js";import"./callExpressionWithFeature-C7xY3YDs.js";import"./quantizationUtils-CyxI-93w.js";import"./FeatureMetadata-CR0aIHAm.js";import"./queryUtils-ChfU6vLU.js";import"./json-Wa8cmqdu.js";import"./timeSupport-5LIXXZIy.js";import"./TimeOnly-Dv2_2idQ.js";import"./labelUtils-umoOFWd6.js";import"./mat3f64-q3fE-ZOt.js";import"./normalizeUtilsSync-CDIV-Jl9.js";import"./dehydratedFeatures-AhQrQOfs.js";let y=class extends V(T){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}async hitTest(t,o){if(!this.graphicsViews.length)return null;const p=this.layer;return this.graphicsViews.reverse().flatMap(r=>{const i=this._popupTemplates.get(r),e=r.hitTest(t);for(const m of e)m.layer=p,m.sourceLayer=p,m.popupTemplate=i;return e}).map(r=>({type:"graphic",graphic:r,layer:p,mapPoint:t}))}update(t){if(this.graphicsViews)for(const o of this.graphicsViews)o.processUpdate(t)}attach(){this.addAttachHandles([l(()=>this.layer?.featureCollections,t=>{this._clear();for(const{popupInfo:o,featureSet:p,layerDefinition:r}of t){const i=S.fromJSON(p),e=new g(i.features),m=r.drawingInfo,c=o?f.fromJSON(o):null,s=u(m.renderer),a=new _({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:e,renderer:s,container:new b(this.view.featuresTilingScheme)});this._graphicsViewMap[i.geometryType]=a,this._popupTemplates.set(a,c),i.geometryType!=="polygon"||this.layer.polygonSymbol?i.geometryType!=="polyline"||this.layer.lineSymbol?i.geometryType!=="point"||this.layer.pointSymbol||(this.layer.pointSymbol=s.symbol):this.layer.lineSymbol=s.symbol:this.layer.polygonSymbol=s.symbol,this.graphicsViews.push(a),this.container.addChild(a.container)}},h),l(()=>this.layer?.polygonSymbol,t=>{this._graphicsViewMap.polygon.renderer=new n({symbol:t})},h),l(()=>this.layer?.lineSymbol,t=>{this._graphicsViewMap.polyline.renderer=new n({symbol:t})},h),l(()=>this.layer?.pointSymbol,t=>{this._graphicsViewMap.point.renderer=new n({symbol:t})},h)])}detach(){this._clear()}moveEnd(){}viewChange(){for(const t of this.graphicsViews)t.viewChange()}_clear(){this.container.removeAllChildren();for(const t of this.graphicsViews)t.destroy();this._graphicsViewMap={},this._popupTemplates.clear(),this.graphicsViews.length=0}};y=w([d("esri.views.2d.layers.GeoRSSLayerView2D")],y);const Qi=y;export{Qi as default};
